/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.example.ryank.studybuddy.editdialogs;

import com.example.ryank.studybuddy.filesystem.Card;
import com.example.ryank.studybuddy.errordialogs.EmptyTextFormErrorDialog;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

/**
 *
 * @author ryank
 */
public class EditCardDialog extends javax.swing.JDialog {

    String question;
    String answer;
    Card card;
    boolean isCanceled;
    boolean isFinished;

    /**
     * Creates new form EditCardDialog
     */
    public EditCardDialog(java.awt.Frame parent, Card card) {
        super(parent, true);
        initComponents();
        this.setLocationRelativeTo(parent);
        this.questionTextArea.setText(card.getCardQuestion());
        this.answerTextArea.setText(card.getCardAnswer());
        this.card = card;
        isCanceled = false;

        isFinished = false;
        questionTextArea.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_TAB) {
                    questionTextArea.transferFocus();

                    e.consume();
                }
            }
        });
        answerTextArea.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_TAB) {
                    answerTextArea.transferFocus();

                    e.consume();
                }
            }
        });
        this.questionTextArea.grabFocus();
        this.pack();
        this.setVisible(true);
    }

    public EditCardDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        this.setLocationRelativeTo(parent);
        this.questionTextArea.setText(card.getCardQuestion());
        this.answerTextArea.setText(card.getCardAnswer());

        isCanceled = false;

        isFinished = false;
        questionTextArea.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_TAB) {
                    questionTextArea.transferFocus();

                    e.consume();
                }
            }
        });
        answerTextArea.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_TAB) {
                    answerTextArea.transferFocus();

                    e.consume();
                }
            }
        });
        this.questionTextArea.grabFocus();
        this.pack();
        this.setVisible(true);
    }

   
    public boolean isCanceled() {
        return isCanceled;
    }

    public boolean isFinished() {
        return isFinished;
    }

    public String getNewQuestion() {
        return this.question;
    }

    public String getNewAnswer() {
        return this.answer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newDefinitionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        answerTextArea = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        createPlusButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Card");

        newDefinitionLabel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        newDefinitionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newDefinitionLabel.setText("Edit Card");

        questionTextArea.setColumns(20);
        questionTextArea.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        questionTextArea.setLineWrap(true);
        questionTextArea.setRows(5);
        questionTextArea.setWrapStyleWord(true);
        questionTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Question", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 12))); // NOI18N
        questionTextArea.setPreferredSize(new java.awt.Dimension(400, 200));
        questionTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                questionTextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(questionTextArea);

        answerTextArea.setColumns(20);
        answerTextArea.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        answerTextArea.setLineWrap(true);
        answerTextArea.setRows(5);
        answerTextArea.setWrapStyleWord(true);
        answerTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Answer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 12))); // NOI18N
        answerTextArea.setPreferredSize(new java.awt.Dimension(400, 200));
        jScrollPane2.setViewportView(answerTextArea);

        cancelButton.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        createPlusButton.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        createPlusButton.setText("Save Edit");
        createPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPlusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newDefinitionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createPlusButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(newDefinitionLabel)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createPlusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void questionTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_questionTextAreaKeyReleased

    }//GEN-LAST:event_questionTextAreaKeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        isCanceled = true;
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void createPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPlusButtonActionPerformed
        if (hasNoText() == false) {
            this.answer = this.answerTextArea.getText();
            this.question = this.questionTextArea.getText();

            isFinished = true;
            isCanceled = false;
            this.setVisible(false);
        } else {
            EmptyTextFormErrorDialog error = new EmptyTextFormErrorDialog(this);
            error.setVisible(true);
        }
    }//GEN-LAST:event_createPlusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditCardDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditCardDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditCardDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditCardDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditCardDialog dialog = new EditCardDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public boolean hasNoText() {
        boolean isEmpty = false;
        if (this.questionTextArea.getText().isEmpty() || this.answerTextArea.getText().isEmpty()) {
            isEmpty = true;
        }
        return isEmpty;
    }

    public Card getCard() {
        return card;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea answerTextArea;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton createPlusButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel newDefinitionLabel;
    private javax.swing.JTextArea questionTextArea;
    // End of variables declaration//GEN-END:variables
}
