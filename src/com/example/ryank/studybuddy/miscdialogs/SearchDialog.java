/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.example.ryank.studybuddy.miscdialogs;

import com.example.ryank.studybuddy.filesystem.Card;
import com.example.ryank.studybuddy.filesystem.Note;
import com.example.ryank.studybuddy.SearchResultType;
import com.example.ryank.studybuddy.filesystem.User;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author ryank
 */
public class SearchDialog extends javax.swing.JDialog {

    User user;
    ArrayList resultsArray;
    DefaultListModel searchResultsModel;

    /**
     * Creates new form SearchDialog
     */
    public SearchDialog(java.awt.Frame parent, User user) {
        super(parent, true);
        this.user = user;
        searchResultsModel = new DefaultListModel();
        resultsArray = new ArrayList();
        initComponents();
        this.setLocationRelativeTo(parent);
        searchResultsModel.clear();
    }

    public SearchDialog(java.awt.Frame parent) {
        super(parent, true);
        this.user = user;
        initComponents();
        searchResultsModel = new DefaultListModel();
        resultsArray = new ArrayList();
        searchResultsModel.clear();
        this.setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newDefinitionLabel = new javax.swing.JLabel();
        keywordTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchList = new javax.swing.JList<>();
        doneButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search");

        newDefinitionLabel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        newDefinitionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newDefinitionLabel.setText("Search");

        keywordTextField.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        keywordTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel1.setText("Search Word: ");

        searchList.setModel(searchResultsModel);
        searchList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                searchListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(searchList);

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(340, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(newDefinitionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(keywordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 132, Short.MAX_VALUE)))
                    .addGap(6, 6, 6)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doneButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(newDefinitionLabel)
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(keywordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addContainerGap(385, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_doneButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String keyword = this.keywordTextField.getText();
       this.searchResultsModel.clear();
        searchClasses(keyword);
        searchChapters(keyword);
        searchCards(keyword);
        searchNotes(keyword);

        System.out.println("searched");


    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_searchListValueChanged
        int index = this.searchList.getSelectedIndex();
        if (index > -1) {

            SearchResultsObject obj = (SearchResultsObject) this.resultsArray.get(index);
            if (obj.getType() == SearchResultType.Card) {
                DisplayCardSearchResultDialog result = new DisplayCardSearchResultDialog(this, (Card) obj.getResult());
                result.setVisible(true);
            }
            if (obj.getType() == SearchResultType.Note) {
                DisplayNoteSearchResultDialog result = new DisplayNoteSearchResultDialog(this, (Note) obj.getResult());
                result.setVisible(true);
            }
        }
    }//GEN-LAST:event_searchListValueChanged

    public void searchClasses(String keyword) {
        for (int i = 0; i < user.getClasses().size(); i++) {
            if (user.getClass(i).getClassName().contains(keyword)) {

                resultsArray.add(new SearchResultsObject(user.getClass(i), SearchResultType.Class, i));
                this.searchResultsModel.addElement(user.getClass(i).getClassName());
            }

        }

    }

    public void searchChapters(String keyword) {
        for (int i = 0; i < user.getClasses().size(); i++) {
            if (user.getClass(i).getChapters().size() > 0) {
                for (int j = 0; j < user.getClass(i).getChapters().size(); j++) {
                    if (user.getClass(i).getChapter(j).getChapterName().contains(keyword)) {
                        resultsArray.add(new SearchResultsObject(user.getClass(i).getChapter(j), SearchResultType.Chapter, i, j));
                        this.searchResultsModel.addElement("Class: " + user.getClass(i).getClassName() + "      Chapter: " + user.getClass(i).getChapter(j).getChapterName());
                    }
                }

            }

        }
    }

    public void searchCards(String keyword) {
        for (int i = 0; i < user.getClasses().size(); i++) {
            if (user.getClass(i).getChapters().size() > 0) {
                for (int j = 0; j < user.getClass(i).getChapters().size(); j++) {
                    if (user.getClass(i).getChapter(j).getCards().size() > 0) {
                        for (int k = 0; k < user.getClass(i).getChapter(j).getCards().size(); k++) {
                            if (user.getClass(i).getChapter(j).getCard(k).getCardQuestion().contains(keyword) || user.getClass(i).getChapter(j).getCard(k).getCardAnswer().contains(keyword)) {
                                resultsArray.add(new SearchResultsObject(user.getClass(i).getChapter(j).getCard(k), SearchResultType.Card, i, j, k));
                                this.searchResultsModel.addElement("Class: " + user.getClass(i).getClassName() + "     Chapter: " + user.getClass(i).getChapter(j).getChapterName() + "     Card: " + user.getClass(i).getChapter(j).getCard(k).getCardQuestion());
                            }
                        }
                    }
                }
            }
        }
    }

    public void searchNotes(String keyword) {
        for (int i = 0; i < user.getClasses().size(); i++) {

            for (int j = 0; j < user.getClass(i).getChapters().size(); j++) {
                if (user.getClass(i).getChapter(j).getNotes().size() > 0) {
                    for (int k = 0; k < user.getClass(i).getChapter(j).getNotes().size(); k++) {
                        if (user.getClass(i).getChapter(j).getNote(k).getNoteName().contains(keyword) || user.getClass(i).getChapter(j).getNote(k).getNoteData().contains(keyword)) {
                            resultsArray.add(new SearchResultsObject(user.getClass(i).getChapter(j).getNote(k), SearchResultType.Note, i, j, k));
                            this.searchResultsModel.addElement("Class: " + user.getClass(i).getClassName() + "      Chapter: " + user.getClass(i).getChapter(j).getChapterName() + "     Note: " + user.getClass(i).getChapter(j).getNote(k).getNoteName());
                        }
                    }
                }
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchDialog dialog = new SearchDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField keywordTextField;
    private javax.swing.JLabel newDefinitionLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JList<String> searchList;
    // End of variables declaration//GEN-END:variables
}
