/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.example.ryank.studybuddy.quizdialogs;

import com.example.ryank.studybuddy.filesystem.Card;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.io.*;
import com.sun.speech.freetts.*;

/**
 *
 * @author Ryan
 */
public class QuizDialog extends javax.swing.JDialog implements KeyListener {

    public ArrayList<Card> cardArray;

    private int currentCard;
    private int totalCards;
    private int numberWrong;
    private int numberRight;
    private boolean isFinished;
    private boolean ttsOn;
    private boolean playThrough;
    private Voice voice;
   
    private String voiceName = "kevin16";

    /**
     * Creates new form QuizDialog
     */
    public QuizDialog(java.awt.Frame parent, ArrayList<Card> cardArray) {
        super(parent, true);
        currentCard = 0;
        numberWrong = 0;
        numberRight = 0;
        isFinished = false;
        ttsOn = false;
        playThrough = false;
        

        this.cardArray = cardArray;
        
        initComponents();

        this.setLocationRelativeTo(parent);

        randomizeCards();
        totalCards = cardArray.size();
        displayCardQuestion();
        displayCardCount();
        this.addKeyListener(this);
        this.pack();
        this.setVisible(true);

    }

    public QuizDialog(java.awt.Frame parent) {
        super(parent, true);
        currentCard = 0;
        numberWrong = 0;
        numberRight = 0;
        isFinished = false;
        ttsOn = false;
        playThrough = false;
       
        initComponents();
        this.setLocationRelativeTo(parent);
        randomizeCards();
        
        displayCardQuestion();
        displayCardCount();
        this.setVisible(true);
        this.addKeyListener(this);
    }

    public int getNumberRight() {
        return numberRight;
    }

    public int getNumberWrong() {
        return numberWrong;
    }

    public void displayCardQuestion() {
        this.questionAnswerTextArea.setText(cardArray.get(currentCard).getCardQuestion());
    }

    public void displayCardAnswer() {
        this.questionAnswerTextArea.setText(cardArray.get(currentCard).getCardAnswer());
    }

    public boolean isFinished() {
        return isFinished;
    }

    public void displayCardCount() {
        this.currentNumberLabel.setText((currentCard + 1) + "");
        this.totalNumberLabel.setText(totalCards + "");
    }

  
    
    public void randomizeCards() {
        Collections.shuffle(cardArray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        questionAnswerTextArea = new javax.swing.JTextArea();
        quizLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        forwardButton = new javax.swing.JButton();
        wrongButton = new javax.swing.JButton();
        correctButton = new javax.swing.JButton();
        totalNumberLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        currentNumberLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quiz");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        questionAnswerTextArea.setColumns(20);
        questionAnswerTextArea.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        questionAnswerTextArea.setLineWrap(true);
        questionAnswerTextArea.setRows(5);
        questionAnswerTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Question/Answer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 12))); // NOI18N
        jScrollPane1.setViewportView(questionAnswerTextArea);

        quizLabel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        quizLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quizLabel.setText("Quiz");

        backButton.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        backButton.setText("<<<<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        forwardButton.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        forwardButton.setText(">>>>");
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });

        wrongButton.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        wrongButton.setText("Wrong");
        wrongButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wrongButtonActionPerformed(evt);
            }
        });

        correctButton.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        correctButton.setText("Correct");
        correctButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctButtonActionPerformed(evt);
            }
        });

        totalNumberLabel.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        totalNumberLabel.setText("000");

        jLabel2.setText(" of ");

        currentNumberLabel.setText("000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(wrongButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(correctButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(forwardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(165, 165, 165))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(currentNumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalNumberLabel)))
                .addContainerGap())
            .addComponent(quizLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalNumberLabel)
                    .addComponent(jLabel2)
                    .addComponent(currentNumberLabel))
                .addGap(25, 25, 25)
                .addComponent(quizLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forwardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(correctButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wrongButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        displayCardQuestion();
       
    }//GEN-LAST:event_backButtonActionPerformed

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
        displayCardAnswer();
        
    }//GEN-LAST:event_forwardButtonActionPerformed

    private void wrongButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wrongButtonActionPerformed
        numberWrong++;
        currentCard++;
        if (currentCard < cardArray.size()) {
            displayCardQuestion();
            displayCardCount();
           
        } else {
            isFinished = true;
            this.setVisible(false);
        }
    }//GEN-LAST:event_wrongButtonActionPerformed

    private void correctButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctButtonActionPerformed
        numberRight++;
        currentCard++;
        if (currentCard < cardArray.size()) {
            displayCardQuestion();
            displayCardCount();
            
        } else {
            isFinished = true;
            this.setVisible(false);
        }
    }//GEN-LAST:event_correctButtonActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == evt.VK_RIGHT) {
            displayCardAnswer();
        }
        if (evt.getKeyCode() == evt.VK_LEFT) {
            displayCardQuestion();
        }
        if (evt.getKeyCode() == evt.VK_UP) {
            numberRight++;
            currentCard++;
            if (currentCard != cardArray.size()) {
                displayCardQuestion();
            } else {
                this.setVisible(false);
            }
        }
        if (evt.getKeyCode() == evt.VK_DOWN) {
            numberWrong++;
            currentCard++;
            if (currentCard != cardArray.size()) {
                displayCardQuestion();
            } else {
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuizDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuizDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuizDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuizDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuizDialog dialog = new QuizDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton correctButton;
    private javax.swing.JLabel currentNumberLabel;
    private javax.swing.JButton forwardButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea questionAnswerTextArea;
    private javax.swing.JLabel quizLabel;
    private javax.swing.JLabel totalNumberLabel;
    private javax.swing.JButton wrongButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {
    }
}
